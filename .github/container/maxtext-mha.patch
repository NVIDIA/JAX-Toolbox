diff --git a/MaxText/configs/base.yml b/MaxText/configs/base.yml
index 57f8932..901fcac 100644
--- a/MaxText/configs/base.yml
+++ b/MaxText/configs/base.yml
@@ -78,7 +78,7 @@ logits_dot_in_fp32: True  # whether to use fp32 in logits_dense or shared_embedd
 remat_policy: 'full'
 scan_layers: True
 param_scan_axis: 1
-attention: 'flash' # Supported attention: dot_product, flash, gpu_flash_xla, gpu_flash_triton
+attention: 'dot_product' # Supported attention: dot_product, flash, gpu_flash_xla, gpu_flash_triton
 # Combine matmuls for QKV and MLP
 fused_qkv: False
 fused_mlp: False
@@ -211,3 +211,7 @@ trainable_position_size: -1  # enable gpt3 position embedding with a positive tr
 compiled_trainstep_file: "" # Name of saved serialized compiled train_step, e.g. compiled_train_v5e-256.pickle
 compile_topology: '' # Target hardware version, e.g. 'v5e-256'
 compile_topology_num_slices: -1 # Number of target slices, set to a positive integer.
+
+# enabling slurm for multiprocess in gpus
+# It must be turned on while using SLURM
+multiprocess_gpu: False
diff --git a/MaxText/train.py b/MaxText/train.py
index 37a992d..f401702 100644
--- a/MaxText/train.py
+++ b/MaxText/train.py
@@ -36,7 +36,7 @@ import checkpointing
 import max_utils
 import maxtext_utils
 import max_logging
-from maxtext import optimizers
+import optimizers
 import pyconfig
 
 from input_pipeline.input_pipeline_interface import create_data_iterator_with_tokenizer
@@ -356,9 +356,22 @@ def main(argv: Sequence[str]) -> None:
   jax.config.update('jax_default_prng_impl', 'unsafe_rbg')
   os.environ["TF_CPP_MIN_LOG_LEVEL"] = "0"
   os.environ["LIBTPU_INIT_ARGS"] = os.environ.get("LIBTPU_INIT_ARGS","") + " --xla_tpu_spmd_rng_bit_generator_unsafe=true"
+
   pyconfig.initialize(argv)
   config = pyconfig.config
   validate_train_config(config)
+
+  if config.multiprocess_gpu:
+
+    n_processes = int(os.environ['SLURM_NTASKS'])
+    print(f'total number of processes: {n_processes}')
+
+    jax.distributed.initialize(
+      coordinator_address=os.environ['SLURM_LAUNCH_NODE_IPADDR']+':12345',
+      num_processes=n_processes,
+      process_id=int(os.environ['SLURM_PROCID']),
+      )
+  
   if jax.__version__ <= '0.4.23':
     cc.initialize_cache(os.path.expanduser(config.jax_cache_dir))
   else:
