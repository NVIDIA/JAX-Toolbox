diff --git a/MaxText/configs/base.yml b/MaxText/configs/base.yml
index 299ebe1..ccd16cb 100644
--- a/MaxText/configs/base.yml
+++ b/MaxText/configs/base.yml
@@ -81,7 +81,7 @@ logits_dot_in_fp32: True  # whether to use fp32 in logits_dense or shared_embedd
 remat_policy: 'full'
 scan_layers: True
 param_scan_axis: 1
-attention: 'flash' # Supported attention: dot_product, flash, gpu_flash_xla, gpu_flash_triton
+attention: 'dot_product' # Supported attention: dot_product, flash, gpu_flash_xla, gpu_flash_triton
 # Combine matmuls for QKV and MLP
 fused_qkv: False
 fused_mlp: False
diff --git a/MaxText/max_utils.py b/MaxText/max_utils.py
index 6ca2f75..e4b939c 100644
--- a/MaxText/max_utils.py
+++ b/MaxText/max_utils.py
@@ -177,7 +177,7 @@ def maybe_initialize_jax_distributed_system(raw_keys):
       For CPUs, we call jax.distributed.initialize() explicitly, with the specified arguments.
   """
   if (raw_keys["enable_checkpointing"] and raw_keys["async_checkpointing"]
-                and raw_keys["compile_topology_num_slices"]==-1):
+                and raw_keys["compile_topology_num_slices"]==-1) or raw_keys["hardware"]=='gpu_multiprocess':
     max_logging.log("Attempting to initialize the jax distributed system...")
     jax.distributed.initialize()
     max_logging.log("Jax distributed system initialized!")
diff --git a/requirements.txt b/requirements.txt
index 8193a84..b0c5572 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -3,7 +3,7 @@ jaxlib>=0.4.23
 orbax-checkpoint>=0.5.2
 absl-py
 array-record
-aqtp
+aqtp>=0.5.0
 cloud-tpu-diagnostics
 google-cloud-storage
 grain-nightly
