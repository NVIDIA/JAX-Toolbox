[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "axlearn"
version = "0.1.7"
description = "AXLearn"
readme = "README.md"
requires-python = ">=3.10"

# Production dependencies.
# Minimal requirments for axlearn/common/config.py.
dependencies = [
    "attrs>=23.1.0", # We use `type` in `attrs.field`
    "numpy>=1.26.4",  # verified with tensorflow 2.14 RaggedTensor
]

[project.optional-dependencies]
# Core dependencies needed for jax based training and evaluation.
# Every time we upgrade JAX, we should try to bring the rest to the newest versions.
core = [
    "absl-py==2.1.0",
    "chex==0.1.88",
    "importlab==0.8.1",  # breaks pytype on 0.8
    "ml-dtypes>=0.4.1",
    "msgpack==1.1.0",  # for checkpointing.
    "nltk==3.7",  # for text preprocessing
    "optax>=0.1.7",  # optimizers (0.1.0 has known bugs).
    "portpicker",
    "pyarrow<21.0.0",  # Pin to v20.x to avoid PyExtensionType -> ExtensionType breaking change in v21
    "protobuf>=3.20.3",
    "tensorboard-plugin-profile>=2.20.4",
    # This has both x86 and arm64 wheels. Underneath the hood it uses tensorflow-macos since 2.13.
    "tensorflow>=2.17.1",
    "tensorflow-datasets>=4.9.2",
    "tensorflow-io>=0.37.1",  # for tensorflow-2.16. Note that 0.37.0 results in "pure virtual method called".
    "tensorflow_text==2.17.0", # implied by seqio, but also used directly for text processing
    "tensorstore>=0.1.63",  # used for supporting GDA checkpoints
    "toml",  # for config management
    "typing-extensions==4.12.2",
    "scipy==1.12.0",  # to avoid "module 'scipy.linalg' has no attribute 'tril'"
    "seqio>=0.0.18",  # used for inputs
    "aqtp==0.8.2", # Updated from 0.4.0; compatible with Python 3.10
    "flax>=0.10.2", # for AQT, param converter and adapter.
    "prefixed==0.9.0", # For formatting file sizes, param counts, etc.
    "grain==0.2.7", # Grain input processing. 0.2.6 onwards supports macos.
]

# GPU custom kernel dependency.
gpu = [
    "triton>=2.1.0",
    "nvidia-ml-py>=12.560.30",
    "nvidia-nccl-cu13",
]
# Orbax checkpointing.
orbax = [
    "humanize==4.10.0",
    "orbax-checkpoint==0.11.15",
]
# Audio dependencies.
audio = [
    "levenshtein==0.25.1",
]

[tool.setuptools.packages.find]
include = ['axlearn*']

[tool.setuptools.package-data]
"*" = ["*.sh", "*.txtpb"]

[tool.setuptools.exclude-package-data]
"*" = ["**/BUILD"]

[tool.pytype]
inputs = ["axlearn"]

[project.scripts]
# Entrypoint for CLI.
axlearn = "axlearn.cli:main"

[tool.black]
line-length = 100
target-version = ['py38', 'py39']

[tool.ruff]
line-length = 100
target-version = 'py39'

[tool.pytest.ini_options]
addopts = "-rs -s -p no:warnings --junitxml=test-results/testing.xml"
markers = [
    "gs_login: tests needing GS login.",
    "tpu: tests needing access to a TPU device.",
    "high_cpu: tests that require a lot of CPU.",
    "fp64: tests that require 64-bit floating point precision.",
    "for_8_devices: tests that run on host platform device count of 8.",
    "golden_config: golden config tests.",
    "golden_init: golden init tests.",
    "golden_regularizer: golden regularizer scale tests.",
    "golden_param_update: golden param update scale tests.",
]
testpaths = "."
junit_family="xunit2"

[tool.isort]
line_length = 100
profile = "black"
