ARG BASE_IMAGE=ghcr.io/nvidia/jax-toolbox:base
ARG SRC_PATH_JAX=/opt/jax
ARG SRC_PATH_XLA=/opt/xla
ARG SRC_PATH_FLAX=/opt/flax
ARG SRC_PATH_TE=/opt/transformer-engine
ARG MANIFEST_FILE=manifest.yaml

ARG BAZEL_CACHE=/tmp
ARG BUILD_DATE

###############################################################################
## Build JAX
###############################################################################

FROM ${BASE_IMAGE} as builder
ARG SRC_PATH_JAX
ARG SRC_PATH_XLA
ARG MANIFEST_FILE
ARG BAZEL_CACHE

COPY ${MANIFEST_FILE} /opt/manifest.d/manifest.yaml
COPY patches/ /opt/manifest.d/patches/

RUN get-source.sh -l jax -m /opt/manifest.d/manifest.yaml
RUN --mount=type=ssh \
    --mount=type=secret,id=SSH_KNOWN_HOSTS,target=/root/.ssh/known_hosts \
    get-source.sh -l xla -m /opt/manifest.d/manifest.yaml

# TODO: This is a WAR to NCCL errors we observe in TOT. Should be removed when no longer needed
RUN <<EOF bash -ex
cd ${SRC_PATH_XLA}

git config user.name "JAX Toolbox"
git config user.email "jax@nvidia.com"
git remote add -f ashors1 https://github.com/ashors1/xla
git cherry-pick --allow-empty $(git merge-base ashors/main ashors1/revert-84222)..ashors1/revert-84222
git remote remove ashors1
EOF

ADD build-jax.sh local_cuda_arch test-jax.sh /usr/local/bin/
# TODO: move this patch into the manifest
ADD xla-arm64-neon.patch /opt
RUN build-jax.sh \
    --bazel-cache ${BAZEL_CACHE} \
    --src-path-jax ${SRC_PATH_JAX} \
    --src-path-xla ${SRC_PATH_XLA} \
    --sm all \
    --xla-arm64-patch /opt/xla-arm64-neon.patch \ 
    --clean

###############################################################################
## Pack jaxlib wheel and various source dirs into a pre-installation image
###############################################################################

ARG BASE_IMAGE
FROM ${BASE_IMAGE} as mealkit
ARG SRC_PATH_JAX
ARG SRC_PATH_XLA
ARG BUILD_DATE
ENV BUILD_DATE=${BUILD_DATE}
# The following environment variables tune performance
ENV XLA_FLAGS="--xla_gpu_enable_latency_hiding_scheduler=true --xla_gpu_enable_async_all_gather=true --xla_gpu_enable_async_reduce_scatter=true --xla_gpu_enable_triton_gemm=false"
ENV CUDA_DEVICE_MAX_CONNECTIONS=1
ENV NCCL_IB_SL=1
ENV CUDA_MODULE_LOADING=EAGER

COPY ${MANIFEST_FILE} /opt/manifest.d/manifest.yaml
COPY patches/ /opt/manifest.d/patches/

COPY --from=builder ${SRC_PATH_JAX} ${SRC_PATH_JAX}
COPY --from=builder ${SRC_PATH_XLA} ${SRC_PATH_XLA}
ADD build-jax.sh local_cuda_arch test-jax.sh /usr/local/bin/

RUN mkdir -p /opt/pip-tools.d
RUN <<"EOF" bash -ex
echo "-e file://${SRC_PATH_JAX}"                        >> /opt/pip-tools.d/manifest.jax
echo "jaxlib @ file://$(ls ${SRC_PATH_JAX}/dist/*.whl)" >> /opt/pip-tools.d/manifest.jax
EOF

## Flax
RUN get-source.sh -l flax -m /opt/manifest.d/manifest.yaml -o /opt/pip-tools.d/requirements-flax.in

## Transformer engine: check out source and build wheel
ENV NVTE_FRAMEWORK=jax
ENV SRC_PATH_TE=${SRC_PATH_TE}
RUN <<"EOF" bash -ex -o pipefail
pip install ninja && rm -rf ~/.cache/pip
get-source.sh -l transformer-engine -m /opt/manifest.d/manifest.yaml
pushd ${SRC_PATH_TE}
python setup.py bdist_wheel && rm -rf build
echo "transformer-engine @ file://$(ls ${SRC_PATH_TE}/dist/*.whl)" >> /opt/pip-tools.d/requirements-te.in
EOF

# TODO: properly configure entrypoint

###############################################################################
## Install primary packages and transitive dependencies
###############################################################################

FROM mealkit as final

RUN pip-finalize.sh
