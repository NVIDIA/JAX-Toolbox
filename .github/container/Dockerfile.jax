ARG BASE_IMAGE=ghcr.io/nvidia/jax-toolbox:base
ARG REPO_JAX="https://github.com/google/jax.git"
ARG REPO_XLA="https://github.com/openxla/xla.git"
ARG REF_JAX=main
ARG REF_XLA=main
ARG SRC_PATH_JAX=/opt/jax-source
ARG SRC_PATH_XLA=/opt/xla-source
ARG BAZEL_CACHE=/tmp
ARG BUILD_DATE

###############################################################################
## Build JAX
###############################################################################

FROM ${BASE_IMAGE} as jax-builder
ARG REPO_JAX
ARG REPO_XLA
ARG REF_JAX
ARG REF_XLA
ARG SRC_PATH_JAX
ARG SRC_PATH_XLA
ARG BAZEL_CACHE

RUN git clone "${REPO_JAX}" "${SRC_PATH_JAX}" && cd "${SRC_PATH_JAX}" && git checkout ${REF_JAX}
RUN --mount=type=ssh \
    --mount=type=secret,id=SSH_KNOWN_HOSTS,target=/root/.ssh/known_hosts \
    git clone "${REPO_XLA}" "${SRC_PATH_XLA}" && cd "${SRC_PATH_XLA}" && git checkout ${REF_XLA}

ADD build-jax.sh local_cuda_arch test-jax.sh /usr/local/bin/
RUN build-jax.sh \
    --bazel-cache ${BAZEL_CACHE} \
    --src-path-jax ${SRC_PATH_JAX} \
    --src-path-xla ${SRC_PATH_XLA} \
    --sm all \
    --clean

RUN cp -r ${SRC_PATH_JAX} ${SRC_PATH_JAX}-no-git && rm -rf ${SRC_PATH_JAX}-no-git/.git
RUN cp -r ${SRC_PATH_XLA} ${SRC_PATH_XLA}-no-git && rm -rf ${SRC_PATH_XLA}-no-git/.git

###############################################################################
## Build 'runtime' flavor without the git metadata
###############################################################################

ARG BASE_IMAGE
FROM ${BASE_IMAGE} as runtime-image
ARG SRC_PATH_JAX
ARG SRC_PATH_XLA
ARG BUILD_DATE
ENV BUILD_DATE=${BUILD_DATE}
# The following environment variables tune performance
ENV XLA_FLAGS="--xla_gpu_enable_latency_hiding_scheduler=true --xla_gpu_enable_async_all_gather=true --xla_gpu_enable_async_reduce_scatter=true --xla_gpu_enable_triton_gemm=false"
ENV CUDA_DEVICE_MAX_CONNECTIONS=1
ENV NCCL_IB_SL=1
ENV CUDA_MODULE_LOADING=EAGER

COPY --from=jax-builder ${SRC_PATH_JAX}-no-git ${SRC_PATH_JAX}
COPY --from=jax-builder ${SRC_PATH_XLA}-no-git ${SRC_PATH_XLA}

RUN pip --disable-pip-version-check install ${SRC_PATH_JAX}/dist/*.whl && \
    pip --disable-pip-version-check install -e ${SRC_PATH_JAX} && \
    rm -rf ~/.cache/pip/

# Install software stack in JAX ecosystem
# Made this optional since tensorstore cannot build on Ubuntu 20.04 + ARM
RUN { pip install flax || true; } && rm -rf ~/.cache/*

# TODO: properly configure entrypoint
# COPY entrypoint.d/ /opt/nvidia/entrypoint.d/

###############################################################################
## Build 'devel' image with build scripts and git metadata
###############################################################################

FROM runtime-image as devel-image
ARG SRC_PATH_JAX
ARG SRC_PATH_XLA

ADD build-jax.sh local_cuda_arch test-jax.sh /usr/local/bin/

COPY --from=jax-builder ${SRC_PATH_JAX}/.git ${SRC_PATH_JAX}/.git
COPY --from=jax-builder ${SRC_PATH_XLA}/.git ${SRC_PATH_XLA}/.git
