# syntax=docker/dockerfile:1-labs

ARG BASE_IMAGE=ghcr.io/nvidia/jax:latest
ARG REPO_PAXML=https://github.com/google/paxml.git
ARG REPO_PRAXIS=https://github.com/google/praxis.git
ARG REF_PAXML=main
ARG REF_PRAXIS=main
ARG SRC_PATH_PAXML=/opt/paxml
ARG SRC_PATH_PRAXIS=/opt/praxis

###############################################################################
## build dependencies
###############################################################################

ARG BASE_IMAGE
FROM ${BASE_IMAGE} as wheel-builder

# We need to build some packages from source, bring some dependencies.
RUN apt-get update && \
  apt-get update && \
  apt-get install -y \
    bat \
    curl \
    git \
    gnupg \
    rsync \
    liblzma-dev \
    && \
  apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists

RUN wget https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-linux-arm64 -O /usr/bin/bazel && \
    chmod a+x /usr/bin/bazel

FROM wheel-builder as tftext-builder

# build tensorflow-text 2.13.0 from source
RUN <<"EOT" bash -exu
set -o pipefail
pip install tensorflow_datasets==4.9.2 auditwheel tensorflow==2.13.0
mkdir -p /opt
pushd /opt
git clone http://github.com/tensorflow/text.git
pushd text
git checkout v2.13.0
./oss_scripts/run_build.sh
popd
EOT

FROM wheel-builder as lingvo-builder

# build lingvo
RUN <<"EOT" bash -exu
set -o pipefail
INSTALL_DIR="${INSTALL_DIR:-/opt}"
LINGVO_REF="${LINGVO_REF:-HEAD}"
LINGVO_REPO="${LINGVO_REPO:-https://github.com/tensorflow/lingvo.git}"
LINGVO_INSTALLED_DIR=${INSTALL_DIR}/lingvo

git clone ${LINGVO_REPO} ${LINGVO_INSTALLED_DIR}
# get-source.sh -f ${LINGVO_REPO} -r ${LINGVO_REF} -d ${LINGVO_INSTALLED_DIR}

pushd ${LINGVO_INSTALLED_DIR}
git fetch origin pull/329/head:pr329
git cherry-pick --allow-empty pr329

# Disable 2 flaky tests here
patch -p1 <<"EOF"
diff --git a/pip_package/build.sh b/pip_package/build.sh
index ef62c432e..659e78956 100755
--- a/pip_package/build.sh
+++ b/pip_package/build.sh
@@ -89,7 +89,7 @@ bazel clean
 bazel build $@ ...
 if ! [[ $SKIP_TESTS ]]; then
   # Just test the core for the purposes of the pip package.
-  bazel test $@ lingvo/core/...
+  bazel test $@ lingvo/core/... --  -//lingvo/tasks/mt:model_test -//lingvo/core:saver_test
 fi

 DST_DIR="/tmp/lingvo/dist"
EOF

sed -i 's/tensorflow=/#tensorflow=/'  docker/dev.requirements.txt
sed -i 's/tensorflow-text=/#tensorflow-text=/'  docker/dev.requirements.txt
sed -i 's/dataclasses=/#dataclasses=/'  docker/dev.requirements.txt
sed -i 's/protobuf==3.20.3/protobuf==3.20/'  docker/dev.requirements.txt
sed -i 's/patchelf==0.17.2.1/patchelf/'  docker/dev.requirements.txt
pip install -r docker/dev.requirements.txt

# Some tests are flaky right now (see the patch abovbe), if needed we can skip
# running the tests entirely by uncommentin the following line.
# SKIP_TEST=1
PYTHON_MINOR_VERSION=10 pip_package/build.sh
cp /tmp/lingvo/dist/lingvo*linux_aarch64.whl /opt/lingvo.whl
EOT

###############################################################################
## Pax for AArch64
###############################################################################

ARG BASE_IMAGE
FROM ${BASE_IMAGE} as staging
ARG REPO_PAXML
ARG REPO_PRAXIS
ARG REF_PAXML
ARG REF_PRAXIS
ARG SRC_PATH_PAXML
ARG SRC_PATH_PRAXIS

COPY --from=lingvo-builder /opt/lingvo.whl /opt/
RUN echo "lingvo @ file:///opt/lingvo.whl" >> /opt/pip-tools.d/manifest.pax

COPY --from=tftext-builder /opt/tensorflow-text.whl /opt/
RUN echo "tensorflow-text @ file:///opt/tensorflow-text.whl" >> /opt/pip-tools.d/manifest.pax

# paxml + praxis
RUN <<"EOT" bash -ex
echo "tensorflow==2.13.0" >> /opt/pip-tools.d/manifest.pax
echo "tensorflow_datasets==4.9.2" >> /opt/pip-tools.d/manifest.pax
echo "auditwheel" >> /opt/pip-tools.d/manifest.pax

get-source.sh -f ${REPO_PAXML}  -r ${REF_PAXML}  -d ${SRC_PATH_PAXML}  -m /opt/pip-tools.d/manifest.pax
get-source.sh -f ${REPO_PRAXIS} -r ${REF_PRAXIS} -d ${SRC_PATH_PRAXIS} -m /opt/pip-tools.d/manifest.pax

for src in ${SRC_PATH_PAXML} ${SRC_PATH_PRAXIS}; do
  pushd ${src}
  sed -i "s| @ git+https://github.com/google/flax||g" requirements.in
  sed -i "s| @ git+https://github.com/google/jax||g" requirements.in
  if git diff --quiet; then
      echo "URL specs no longer present in select dependencies for ${src}"
      exit 1
  else
      git commit -a -m "remove URL specs from select dependencies for ${src}"
  fi
  popd
done
EOT

ADD test-pax.sh /usr/local/bin

###############################################################################
## Install accumulated packages from the base image and the previous stage
###############################################################################

FROM staging as final

RUN pip-finalize.sh
