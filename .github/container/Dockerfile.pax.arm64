# syntax=docker/dockerfile:1-labs
###############################################################################
## Pax for AArch64
###############################################################################

ARG BASE_IMAGE=ghcr.io/nvidia/jax:latest
FROM ${BASE_IMAGE}

# We need to build some packages from source, bring some dependencies.
RUN apt-get update && \
  apt-get update && \
  apt-get install -y \
    bat \
    curl \
    git \
    gnupg \
    rsync \
    liblzma-dev \
    && \
  apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists


RUN wget https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-linux-arm64 -O /usr/bin/bazel && \
    chmod a+x /usr/bin/bazel


# Lingvo
ADD install_lingvo_aarch64.sh /opt/
ADD lingvo.patch /opt/
RUN /opt/install_lingvo_aarch64.sh

ADD install-pax.sh /usr/local/bin
RUN install-pax.sh

ENV NVTE_FRAMEWORK=jax
ADD install-te.sh /usr/local/bin
RUN install-te.sh

# Install T5 now, Pip will build the wheel from source, it needs Rust.
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /tmp/rustup.sh && \
  echo "be3535b3033ff5e0ecc4d589a35d3656f681332f860c5fd6684859970165ddcc /tmp/rustup.sh" | sha256sum --check && \
  bash /tmp/rustup.sh -y && \
  export PATH=$PATH:/root/.cargo/bin && \
  pip install t5 && \
  rm -Rf /root/.cargo /root/.rustup && \
  mv /root/.profile /root/.profile.save && \
  grep -v cargo /root/.profile.save > /root/.profile && \
  rm /root/.profile.save && \
  mv /root/.bashrc /root/.bashrc.save && \
  grep -v cargo /root/.bashrc.save > /root/.bashrc && \
  rm /root/.bashrc.save && \
  rm -Rf /root/.cache /tmp/*

ADD test-pax.sh /usr/local/bin
