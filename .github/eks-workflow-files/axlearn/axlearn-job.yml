apiVersion: batch/v1
kind: Job
metadata:
    name: PLACEHOLDER
    labels:
        kueue.x-k8s.io/queue-name: p5-queue
spec:
    completions: 1
    parallelism: 1
    template:
        spec:
            restartPolicy: Never
            containers:
                - name: axlearn
                  image: PLACEHOLDER
                  command:
                    - bash
                    - -c
                    - |
                      set -exo pipefail
                      pip install pytest-reportlog pytest-xdist

                      LOG_DIR="/opt/output/logs"
                      mkdir -p ${LOG_DIR}

                      # ONLY FOR TESTING THEN FIX THIS 
                      chmod +x /usr/local/bin/pytest-xdist.sh
                      chmod +x /usr/local/bin/test-axlearn.sh
                      # Start MPS daemon
                      nvidia-cuda-mps-control -d &
                      # run tests 
                      pytest-xdist.sh 8 1 axlearn-unittests.jsonl test-axlearn.sh --directory "." --output "/opt/output/" --test-files "/opt/axlearn/axlearn/common/*_test.py" | tee -a ${LOG_DIR}/pytest_stdout.log
                                            
                      killall nvidia-cuda-mps-control || true
                      wait
                      mkdir -p /jax-toolbox-eks-output/axlearn/${RUN_ID}
                      cp /opt/output/summary.txt /jax-toolbox-eks-output/axlearn/${RUN_ID}/summary.txt
                      cp -r /opt/output/logs/*.log /jax-toolbox-eks-output/axlearn/${RUN_ID}/.
                      cp -r axlearn-unittests.jsonl /jax-toolbox-eks-output/axlearn/${RUN_ID}/.
                  env:
                    - name: RUN_ID
                      value: PLACEHOLDER
                  resources:
                    limits:
                        nvidia.com/gpu: 8
                  volumeMounts:
                    - name: output
                      mountPath: /opt/output
                    - name: s3-storage 
                      mountPath: /jax-toolbox-eks-output
            imagePullSecrets:
                - name: PLACEHOLDER
            volumes:
                - name: output
                  emptyDir: {}
                - name: s3-storage
                  persistentVolumeClaim:
                    claimName: s3-pvc 
