apiVersion: batch/v1
kind: Job
metadata:
  labels:
    kueue.x-k8s.io/queue-name: p5-queue
  name: JOB_NAME
spec:
  activeDeadlineSeconds: 1200
  template:
    spec:
      containers:
      - command:
        - bash
        - -xo
        - pipefail
        - -c
        - |
#!/bin/bash
nvidia-smi
pip install pytest \
      pytest-reportlog \
      cuda-python \
      -r ${SRC_PATH_TRANSFORMER_ENGINE}/examples/jax/encoder/requirements.txt
pip install pytest-reportlog pytest-xdist

set -ex
cd ${SRC_PATH_TRANSFORMER_ENGINE}/examples/jax/encoder
pytest --report-log=/output/pytest-report.jsonl \
test_single_gpu_encoder.py \
test_multigpu_encoder.py \
test_model_parallel_encoder.py | tee -a ${LOG_DIR}/tests.log

touch /opt/output/done
        env:
        - name: LOG_DIR
          value: /opt/output
        image: IMAGE_URI
        name: transformer-engine
        resources:
          limits:
            nvidia.com/gpu: N_GPU
        volumeMounts:
        - mountPath: /opt/output
          name: output
      - command:
        - sh
        - -c
        - |
          while [ ! -f /opt/output/done ]; do
            sleep 5
          done

          # Upload logs to S3 bucket
          cat /opt/output/tests.log
          aws s3 cp /opt/output/ s3://${S3_BUCKET}/${CI_NAME}/${RUN_ID}/ --recursive --exclude "*" --include "*.log"
        env:
        - name: RUN_ID
          value: JOB_NAME
        - name: S3_BUCKET
          value: jax-toolbox-eks-output
        - name: CI_NAME
          value: transformer-engine
        image: amazon/aws-cli
        name: upload-logs
        volumeMounts:
        - mountPath: /opt/output
          name: output
      imagePullSecrets:
      - name: SECRETS_NAME
      restartPolicy: Never
      volumes:
      - name: output
