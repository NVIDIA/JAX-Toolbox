name: ~Create GKE cluster with XPK

on:
  workflow_dispatch:
    inputs:
      CLUSTER_NAME:
        type: string
        description: Cluster name
        required: true
      GKE_VERSION:
        type: string
        default: 1.31.6-gke.1221000 
        required: false
      DEVICE_TYPE: 
        type: string
        default: h100-mega-80gb-8
        required: false
      DEFAULT_CPU_MACHINE: 
        type: string
        default: e2-standard-8
        required: false
      NUM_NODES: 
        type: string
        default: 2
        required: false
      GCP_PROJECT: 
        type: string
        default: nv-jaxtoolboxgcp-20240925
        required: false
      GCP_ZONE: 
        type: string
        default: us-central1-a
        required: false
      GCP_GCE_RESERVATION: 
        type: string
        default: jtb-reservation
        required: false
      XPK_VERSION:
        description: 'XPK release tag'
        required: false
        default: 'v0.10.1'
        type: string
      XPK_PYTHON:
        description: 'Python version for XPK'
        required: false
        default: '3.12.10'
        type: string

jobs:
  xpk-create-gke-cluster:
    runs-on: gke-a3mega

    steps:
    - uses: actions/checkout@v4

    - name: Set workload name
      shell: bash -x -e -u {0}
      run: |
        WORKLOAD_NAME="cluster-create-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}"
        DATE=$(date +'%Y-%m-%d')

        echo "WORKLOAD_NAME=${WORKLOAD_NAME}" >> ${GITHUB_ENV}
        echo "DATE=${DATE}" >> ${GITHUB_ENV}

    - name: Setup environment
      shell: bash -x -e -u {0}
      run: |
        mkdir -p ${WORKLOAD_NAME}
        uv venv --verbose --python=${{ inputs.XPK_PYTHON }} --directory=${WORKLOAD_NAME}
        source ${WORKLOAD_NAME}/.venv/bin/activate

        # install xpk
        git clone --depth=1 --branch=${{ inputs.XPK_VERSION }} https://github.com/AI-Hypercomputer/xpk.git ${WORKLOAD_NAME}/xpk

        sed 's@pip install \.@'$(which uv)' pip install \.@g' -i ${WORKLOAD_NAME}/xpk/Makefile
        cd ${WORKLOAD_NAME}/xpk && sudo make install; cd -

    - name: Apply XPK cluster create patch
      shell: bash -x -e -u {0}
      run: |
        PATCH_PATH=.github/gke-workflow/xpk/${{ inputs.XPK_VERSION}}
        ls ${PATCH_PATH}/*.patch | xargs -I {} git apply --unsafe-paths {} --directory ${WORKLOAD_NAME}/xpk

    - name: Show environment
      run: |
        set -x 
        
        gcloud version

        source $HOME/.venv/bin/activate
        python --version
        xpk version

    - name: Create cluster from compute reservation with xpk
      run: |
        CLUSTER_EXISTS=$(gcloud container clusters list  --format=json | jq -r  'any(.[].name; . == "'${{ inputs.CLUSTER_NAME }}'")')
        
        if ! [ $CLUSTER_EXISTS = true  ]; then
          source ${WORKLOAD_NAME}/.venv/bin/activate
          python ${WORKLOAD_NAME}/xpk.py cluster create \
                 --cluster ${{ inputs.CLUSTER_NAME }} \
                 --gke-version ${{ inputs.GKE_VERSION }} \
                 --device-type ${{ inputs.DEVICE_TYPE }} \
                 --num-nodes ${{ inputs.NUM_NODES }} \
                 --default-pool-cpu-machine-type=${{ inputs.DEFAULT_CPU_MACHINE }} \
                 --project=${{ inputs.GCP_PROJECT }} \
                 --reservation ${{ inputs.GCP_GCE_RESERVATION }} \
                 --zone ${{ inputs.GCP_ZONE }}
        else
          echo "Cluster ${{ inputs.CLUSTER_NAME }} already exists, skipping creation"
        fi

    - name: Configure cluster ServiceAccount
      run: |
  
        # not configured in xpk pre v0.10.0
        if [[ "${{ inputs.XPK_VERSION }}" == "v0.8.0" ]]; then
          kubectl apply -f .github/gke-workflow/xpk/v0.8.0/xpk-sa-rbac.yml
        fi

        # enable GCS interactivity from pods
        kubectl apply -f .github/gke-workflow/gke/xpk-gcs-sa.yml

    - name: Install GPU operator
      run: |
        kubectl apply -f .github/gke-workflow/gke/namespace.yml
        kubectl apply -n gpu-operator -f .github/gke-workflow/gke/gpu-operator-quota.yml
        kubectl apply -f https://raw.githubusercontent.com/GoogleCloudPlatform/container-engine-accelerators/master/nvidia-driver-installer/cos/daemonset-preloaded.yaml
        helm install --wait  \
                     --namespace gpu-operator \
                     gpu-operator
                     nvidia/gpu-operator \
                     --version=v25.3.2 \
                     -f .github/gke-workflow/gke/helm/gpu-operator.yml

    - name: Clean up xpk environment from runner
      shell: bash -x -u {0}
      if: ${{ always() }}
      run: |
        sudo rm -rf ${WORKLOAD_NAME}
