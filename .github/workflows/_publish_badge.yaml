name: ~publish test results into a shield.io endpoint json file

on:
  workflow_call:
    inputs:
      SCRIPT:
        type: string
        description: 'Script to run:'
        required: true
      ENDPOINT_FILENAME:
        type: string
        description: 'Filename of the shield.io endpoint json:'
        required: true
      PUBLISH:
        type: boolean
        description: Upload the endpoint file as GitHub gist?
        default: false
        required: true

jobs:
  publish:
    runs-on: ubuntu-22.04
    steps:
      - name: Download all artifacts from the previous jobs
        uses: actions/download-artifact@v3

      - name: Execute data processing script
        shell: bash -x -e {0}
        run: ${{ inputs.SCRIPT }}

      - name: Upload badge artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.ENDPOINT_FILENAME }}
          path: ${{ inputs.ENDPOINT_FILENAME }}

      - name: Update status badge file in gist
        uses: actions/github-script@v5
        if: inputs.PUBLISH
        with:
          github-token: ${{ secrets.NVJAX_GIST_TOKEN }}
          script: |
            const fs = require('fs').promises;
            const gistId = "${{ vars.BADGE_ENDPOINT_GIST_ID }}";
            const filename = "${{ inputs.ENDPOINT_FILENAME }}";
            const content = await fs.readFile(filename, 'utf8');

            const { data: gist } = await github.rest.gists.get({ gist_id: gistId });

            await github.rest.gists.update({
              gist_id: gistId,
              files: {
                [filename]: { content },
                ...Object.fromEntries(Object.entries(gist.files).filter(([name]) => name !== filename))
              }
            });
