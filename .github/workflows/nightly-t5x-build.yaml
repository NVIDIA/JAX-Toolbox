name: Nightly T5X build
run-name: Nightly T5X build (${{ github.event_name == 'workflow_run' && format('nightly {0}', github.event.workflow_run.created_at) || github.event_name }})

on:
  workflow_run:
    workflows: [Nightly JAX build]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      REPO_TE:
        type: string
        description: URL of TE repository to check out
        required: false
        default: "https://github.com/NVIDIA/TransformerEngine.git"
      REF_TE:
        type: string
        description: Git commit, tag, or branch for TE
        required: false
        default: main
      PUBLISH:
        type: boolean
        description: Publish dated images and update the 'latest' tag?
        default: false
        required: false

env:
  DEFAULT_REPO_TE: https://github.com/NVIDIA/TransformerEngine.git
  DEFAULT_REF_TE: main

permissions:
  contents: read  # to fetch code
  actions:  write # to cancel previous workflows
  packages: write # to upload container

jobs:

  metadata:
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-22.04
    outputs:
      BUILD_DATE: ${{ steps.meta.outputs.BUILD_DATE }}
      REPO_TE: ${{ steps.meta.outputs.REPO_TE }}
      REF_TE: ${{ steps.meta.outputs.REF_TE }}
    steps:
      - name: Set build metadata
        id: meta
        shell: bash -x -e {0}
        run: |
          BUILD_DATE=$(TZ='US/Los_Angeles' date '+%Y-%m-%d')
          echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_OUTPUT
          if [[ -z "${{ inputs.REPO_TE }}" ]]; then
            REPO_TE=${{ env.DEFAULT_REPO_TE }}
          else
            REPO_TE=${{ inputs.REPO_TE }}
          fi
          echo "REPO_TE=$REPO_TE" >> $GITHUB_OUTPUT
          if [[ -z "${{ inputs.REF_TE }}" ]]; then
            REF_TE=${{ env.DEFAULT_REF_TE }}
          else
            REF_TE=${{ inputs.REF_TE }}
          fi
          echo "REF_TE=$REF_TE" >> $GITHUB_OUTPUT

  build:
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch'
    needs: metadata
    uses: ./.github/workflows/_build_t5x.yaml
    with:
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
      REPO_TE: ${{ needs.metadata.outputs.REPO_TE }}
      REF_TE: ${{ needs.metadata.outputs.REF_TE }}
    secrets: inherit

  publish:
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch' && inputs.PUBLISH)
    needs: [metadata, build]
    uses: ./.github/workflows/_publish_container.yaml
    secrets: inherit
    with:
      SOURCE_IMAGE: ${{ needs.build.outputs.DOCKER_TAGS }}
      TARGET_IMAGE: upstream-t5x
      TARGET_TAGS: |
        type=raw,value=latest,priority=1000
        type=raw,value=nightly-${{ needs.metadata.outputs.BUILD_DATE }},priority=900

  if-upstream-failed:
    runs-on: ubuntu-latest
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'failure') && github.event_name != 'workflow_dispatch'
    steps:
      - run: echo 'Upstream workflow failed, aborting run' && exit 1
