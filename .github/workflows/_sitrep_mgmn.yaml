name: ~Generate sitrep for Multi-Node Multi-GPU tests

on:
  workflow_call:
    inputs:
      BADGE_FILENAME:
        type: string
        description: 'Name of the endpoint JSON file for shields.io badge'
        required: true
      ARTIFACT_NAME:
        type: string
        description: 'Name of the artifact zip file'
        required: true
      FW_NAME:
        type: string
        description: 'Name of the framework being used'
        required: true
    outputs:
      STATUS:
        description: 'Summary of all tests run for the workflow. Set to "success" when all metrics per job and all jobs pass, whereas a single metric failure or job error sets the status to "failure"'
        value: ${{ jobs.sitrep.outputs.STATUS }}

jobs:
  sitrep:
    runs-on: ubuntu-22.04
    outputs:
      STATUS: ${{ steps.gen-sitrep.outputs.STATUS }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download all artifacts from the previous jobs
        uses: actions/download-artifact@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Generate sitrep
        id: generate-sitrep
        env:
          GITHUB_OUTPUT: ${{ runner.temp }}/github_output.txt
          GITHUB_STEP_SUMMARY: ${{ github.step_summary }}
        uses: ./.github/actions/generate-sitrep  # Path to your composite action
        with:
          badge_label: "${{ inputs.FW_NAME }} Tests"
          badge_filename: "${{ inputs.BADGE_FILENAME }}"
          exit_status_pattern: "${{ inputs.FW_NAME }}*-${{ github.run_id }}-*/*-status.json"
          metrics_logs: "${{ inputs.FW_NAME }}-metrics-test-log/report.jsonl"
          metrics_json_patterns: "${{ inputs.FW_NAME }}-metrics-test-log/*_metrics.json"
          exit_status_summary_file: "exit_status_summary.md"
          metrics_summary_file: "metrics_summary.md"
          github_run_id: "${{ github.run_id }}"
          github_output_file: "${{ env.GITHUB_OUTPUT }}"
          github_step_summary: "${{ env.GITHUB_STEP_SUMMARY }}"

      - name: Read STATUS Output
        id: read-status
        run: |
          echo "STATUS=$(grep '^STATUS=' '${{ runner.temp }}/github_output.txt' | cut -d'=' -f2-)" >> $GITHUB_OUTPUT

      - name: Check and display metrics summary
        run: |
          if [[ -f metrics_summary.json ]]; then
            echo "metrics_summary.json exists:"
            cat metrics_summary.json
          else
            echo "metrics_summary.json does not exist."
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.ARTIFACT_NAME }}
          path: |
            sitrep.json
            ${{ inputs.BADGE_FILENAME }}
            metrics_summary.json
