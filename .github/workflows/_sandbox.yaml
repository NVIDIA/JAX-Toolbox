name: "~Sandbox"

on:
  push:

jobs:
  build-tis:
    name: build-tis
    runs-on: [self-hosted, "amd64", large]
    env:
      BADGE_FILENAME_FULL: badge-tis-build-amd64.json
    outputs:
      DOCKER_TAG: ${{ steps.jax-metadata.outputs.tags }}
    steps:
      - name: Print environment variables
        run: env

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup SSH known hosts
        id: ssh-known-hosts
        run: |
          mkdir -p ~/.ssh
          cat >> ~/.ssh/known_hosts << EOF
          ${{ vars.SSH_KNOWN_HOSTS }}
          EOF
          chmod 600 ~/.ssh/known_hosts
          echo "FILE=$(realpath ~/.ssh/known_hosts)" >> $GITHUB_OUTPUT

      - name: Check out the repository under ${GITHUB_WORKSPACE}
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.1

      - name: Set docker metadata - base image
        id: base-metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            jax-toolbox-internal
          flavor: |
            latest=false
          tags: |
            type=raw,value=${{ github.run_id }}-tis-amd64-base
          labels:
            org.opencontainers.image.created=2024-04-10

      - name: print PWD
        run: |
          pwd
          ls -laR

      - name: Build base image
        id: base-build
        uses: docker/build-push-action@v5
        with:
          context: .github/container
          push: false
          file: Dockerfile.base
          platforms: linux/amd64
          tags: ${{ steps.base-metadata.outputs.tags }}
          labels: ${{ steps.base-metadata.outputs.labels }}
          ssh: default
          secret-files: |
            "SSH_KNOWN_HOSTS=${{ steps.ssh-known-hosts.outputs.FILE }}"
          build-args: |
            BASE_IMAGE=nvcr.io/nvidia/tritonserver:24.03-tf2-python-py3
            BUILD_DATE=2024-04-10

      - name: Set docker metadata - jax image
        id: jax-metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            jax-toolbox-internal
          flavor: |
            latest=false
          tags: |
            type=raw,value=${{ github.run_id }}-tis-amd64-jax
          labels:
            org.opencontainers.image.created=2024-04-10

      - name: Build JAX+TIS image
        id: jax-build
        uses: docker/build-push-action@v5
        with:
          context: .github/container
          push: true
          file: Dockerfile.jax
          platforms: linux/amd64
          tags: ${{ steps.jax-metadata.outputs.tags }}
          labels: ${{ steps.jax-metadata.outputs.labels }}
          target: final
          ssh: default
          secret-files: |
            "SSH_KNOWN_HOSTS=${{ steps.ssh-known-hosts.outputs.FILE }}"

          build-args: |
            BASE_IMAGE=${{ steps.base-metadata.outputs.tags }}
            BAZEL_CACHE=${{ vars.BAZEL_REMOTE_CACHE_URL }}
            BUILD_DATE=2024-04-10

      - name: Generate sitrep
        if: "!cancelled()"
        shell: bash -x -e {0}
        run: |
          # bring in utility functions
          source .github/workflows/scripts/to_json.sh

          badge_label='tis amd64 build'
          tags="${{ steps.jax-metadata.outputs.tags }}"
          digest="${{ steps.jax-build.outputs.digest }}"
          outcome="${{ steps.jax-build.outcome }}"

          if [[ ${outcome} == "success" ]]; then
            badge_message="pass"
            badge_color=brightgreen
            summary="tis build on amd64: $badge_message"
          else
            badge_message="fail"
            badge_color=red
            summary="tis build on amd64: $badge_message"
          fi

          to_json \
            summary \
            badge_label tags digest outcome \
          > sitrep.json

          schemaVersion=1 \
          label="${badge_label}" \
          message="${badge_message}" \
          color="${badge_color}" \
          to_json schemaVersion label message color \
          > ${{ env.BADGE_FILENAME_FULL }}

      - name: Upload sitrep and badge
        if: "!cancelled()"
        uses: actions/upload-artifact@v4
        with:
          name: artifact-tis-build-amd64
          path: |
            sitrep.json
            ${{ env.BADGE_FILENAME_FULL }}
