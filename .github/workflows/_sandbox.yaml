name: "~Sandbox"

on:
  push:

permissions:
  contents: read  # to fetch code
  actions:  write # to cancel previous workflows
  packages: write # to upload container

jobs:
  retrofit:
    uses: ./.github/workflows/_retrofit_container.yaml
    with:
      SOURCE_IMAGE: 'ghcr.io/nvidia/jax:latest'
      TARGET_TAGS: |
        type=raw,value=${{ github.run_id }},priority=900
      EXPOSE_SINGLE_ARCH_IMAGES: true
    secrets: inherit

  retrofit-containers:
    runs-on: ubuntu-22.04
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      ## Requires skopeo >= v1.6.0, but Actions only has v1.4.0
      # - name: Create Docker v2s2 multi-arch manifest list
      #   id: multi-arch
      #   shell: bash -x -e {0}
      #   run: |
      #     for tag in $(echo "${{ steps.meta.outputs.tags }}"); do
      #       skopeo copy --multi-arch all --format v2s2 docker://${{ inputs.SOURCE_IMAGE }} docker://$tag
      #     done

      - name: Create Docker v2s2 single-arch manifests
        id: single-arch
        shell: bash -x -e {0}
        run: |

          for source in \
            ghcr.io/nvidia/jax-toolbox:base   \
            ghcr.io/nvidia/jax:latest         \
            ghcr.io/nvidia/t5x:latest         \
          ; do
            source_repo=$(echo ${source} | cut -d: -f1)
            media_type=$(docker manifest inspect ${source} | jq -r '.mediaType')
            if [[ ${media_type} != "application/vnd.oci.image.index.v1+json" ]]; then
              echo "This workflow only work with OCI manifest lists"
              exit 1
            fi

            manifests=$(
              docker manifest inspect ${{ inputs.SOURCE_IMAGE }} |\
              jq -r '.manifests[] | select(.platform.os != "unknown") | .digest' |\
              xargs -I{} echo ${source_repo}@{} |\
              tr '\n' ' '
            )

            for manifest in ${{ steps.get-manifests.outputs.manifests }}; do
              os=$(docker manifest inspect -v $manifest | jq -r '.Descriptor.platform.os')
              arch=$(docker manifest inspect -v $manifest | jq -r '.Descriptor.platform.architecture')
              for tag in $(echo "${{ steps.meta.outputs.tags }}"); do
                single_arch_tag="ghcr.io/nvidia/jax-toolbox-retrofit:${{ github.run_id }}-${os}-${arch}"
                skopeo copy --format v2s2 docker://$manifest docker://${single_arch_tag}
                echo "${single_arch_tag}" >> $GITHUB_STEP_SUMMARY
              done
            done
          done