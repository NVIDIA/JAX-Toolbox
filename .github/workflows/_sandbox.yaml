name: CI

on:
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:
    inputs:
      CUDA_IMAGE:
        type: string
        description: 'Base CUDA image, e.g. nvidia/cuda:X.Y.Z-devel-ubuntu22.04'
        required: false
        default: 'latest'
      SRC_JAX:
        description: 'JAX source: <repo>#<branch|tag|commit>'
        type: string
        required: true
        default: 'https://github.com/google/jax.git#main'
      SRC_XLA:
        description: 'XLA source: <repo>#<branch|tag|commit>'
        type: string
        required: true
        default: 'https://github.com/openxla/xla.git#main'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: read  # to fetch code
  actions:  write # to cancel previous workflows
  packages: write # to upload container

jobs:

  metadata:
    runs-on: ubuntu-22.04
    outputs:
      BUILD_DATE: ${{ steps.date.outputs.BUILD_DATE }}
      REPO_JAX: ${{ steps.parse-inputs.outputs.REPO_JAX }}
      REF_JAX: ${{ steps.parse-inputs.outputs.REF_JAX }}
      REPO_XLA: ${{ steps.parse-inputs.outputs.REPO_XLA }}
      REF_XLA: ${{ steps.parse-inputs.outputs.REF_XLA }}
    steps:
      - name: Set build date
        id: date
        shell: bash -x -e {0}
        run: |
          BUILD_DATE=$(TZ='US/Los_Angeles' date '+%Y-%m-%d')
          echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_OUTPUT

      - name: Parse inputs
        id: parse-inputs
        shell: bash -x -e {0}
        run: |
          # split input in the format of repo#ref into repo and ref parts
          parse_git_src() {
            PACKAGE=$1
            INPUT="$2"
            DEFAULT="$3"
            SRC="${INPUT:-${DEFAULT}}"
            echo "REPO_${PACKAGE}=$(echo "${SRC}" | cut -f1 -d#)" >> $GITHUB_OUTPUT
            echo "REF_${PACKAGE}=$(echo "${SRC}"  | cut -f2 -d#)" >> $GITHUB_OUTPUT
          }

          # default values are for `pull_request`` event types
          parse_git_src JAX    "${{ inputs.SRC_JAX }}"    "https://github.com/google/jax.git#main"
          parse_git_src XLA    "${{ inputs.SRC_XLA }}"    "https://github.com/openxla/xla.git#main"
          parse_git_src TE     "${{ inputs.SRC_TE }}"     "https://github.com/NVIDIA/TransformerEngine.git#main"
          parse_git_src T5X    "${{ inputs.SRC_T5X }}"    "https://github.com/google-research/t5x.git#main"
          parse_git_src PAXML  "${{ inputs.SRC_PAXML }}"  "https://github.com/google/paxml.git#main"
          parse_git_src PRAXIS "${{ inputs.SRC_PRAXIS }}" "https://github.com/google/praxis.git#main"

  build-base:
    needs: metadata
    uses: ./.github/workflows/_build_base.yaml
    with:
      BASE_IMAGE: ${{ inputs.CUDA_IMAGE || 'latest' }}
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
    secrets: inherit

  build-jax:
    needs: [metadata, build-base]
    uses: ./.github/workflows/_build_jax.yaml
    with:
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
      BASE_IMAGE: ${{ needs.build-base.outputs.DOCKER_TAGS }}
      REPO_JAX: ${{ needs.metadata.outputs.REPO_JAX }}
      REF_JAX: ${{ needs.metadata.outputs.REF_JAX }}
      REPO_XLA: ${{ needs.metadata.outputs.REPO_XLA }}
      REF_XLA: ${{ needs.metadata.outputs.REF_XLA }}
    secrets: inherit

  test-jax:
    needs: build-jax
    uses: ./.github/workflows/_test_jax.yaml
    with:
      JAX_IMAGE: ${{ needs.build-jax.outputs.DOCKER_TAGS }}
    secrets: inherit