name: "~Sandbox"

on:
  workflow_dispatch:
    inputs:
      ARCHITECTURE:
        type: choice
        description: 'Architecture to build for'
        required: true
        options:
          - amd64
          - arm64
      BUILD_DATE:
        type: string
        description: 'Date of the build'
        required: true
        default: '2024-03-04'

permissions:
  contents: read  # to fetch code
  actions:  write # to cancel previous workflows
  packages: write # to upload container

jobs:

  patch-jax:
    runs-on: [self-hosted, "${{ inputs.ARCHITECTURE }}", small]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Patch manifest.yaml in JAX container``
        run: |
          pushd .github/container
          cat >> manifest.yaml <<EOF
          equinox:
            url: https://github.com/patrick-kidger/equinox.git
            tracking_ref: main
            latest_verified_commit: 1e601672d38d2c4d483535070a3572d8e8508a20
            mode: git-clone
          EOF
          cat > Dockerfile <<"EOF"
          FROM ghcr.io/nvidia/jax-mealkit:jax

          COPY manifest.yaml /opt/manifest.d/manifest.yaml
          EOF
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.1

      - name: Build mealkit image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .github/container
          push: true
          file: .github/container/Dockerfile
          platforms: linux/${{ inputs.ARCHITECTURE }}
          tags: ghcr.io/nvidia/jax-toolbox-internal:${{ github.run_id }}-jax-mealkit
            
  build-equinox:
    uses: ./.github/workflows/_build.yaml
    needs: patch-jax
    with:
      ARCHITECTURE: ${{ inputs.ARCHITECTURE }}
      ARTIFACT_NAME: artifact-equinox-build
      BADGE_FILENAME: badge-equinox-build
      BUILD_DATE: ${{ inputs.BUILD_DATE }}
      BASE_IMAGE: ghcr.io/nvidia/jax-toolbox-internal:${{ github.run_id }}-jax-mealkit
      CONTAINER_NAME: equinox
      DOCKERFILE: .github/container/Dockerfile.equinox
    secrets: inherit

  test-equinox:
    needs: build-equinox
    if: inputs.ARCHITECTURE == 'amd64' # arm64 runners n/a
    uses: ./.github/workflows/_test_unit.yaml
    with:
      IMAGE: ${{ needs.build-equinox.outputs.DOCKER_TAG_FINAL }}
      TEST_NAME: equinox
      EXECUTE: |
        docker run --shm-size=1g --gpus all ${{ needs.build-equinox.outputs.DOCKER_TAG_FINAL }} \
        bash -exc -o pipefail \
        'pushd /opt/equinox/tests && pip install -r requirements.txt && pytest .' | tee test-equinox.log
      STATISTICS_SCRIPT: |
        errors=$(echo $summary_line | grep -oE '[0-9]+ error' | awk '{print $1} END { if (!NR) print 0}')
        failed_tests=$(echo $summary_line | grep -oE '[0-9]+ failed' | awk '{print $1} END { if (!NR) print 0}')
        passed_tests=$(echo $summary_line | grep -oE '[0-9]+ passed' | awk '{print $1} END { if (!NR) print 0}')
        total_tests=$((failed_tests + passed_tests))
        echo "TOTAL_TESTS=${total_tests}" >> $GITHUB_OUTPUT
        echo "ERRORS=${errors}" >> $GITHUB_OUTPUT
        echo "PASSED_TESTS=${passed_tests}" >> $GITHUB_OUTPUT
        echo "FAILED_TESTS=${failed_tests}" >> $GITHUB_OUTPUT
      ARTIFACTS: |
        test-equinox.log
    secrets: inherit
