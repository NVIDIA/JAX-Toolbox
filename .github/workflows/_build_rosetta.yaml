name: ~build Rosetta container

on:
  workflow_call:
    inputs:
      ARCHITECTURE:
        type: string
        description: 'CPU architecture to build the image for, e.g. amd64, arm64'
        required: true
      BASE_LIBRARY:
        type: string
        description: 'Choice of base library to build on:'
        required: false
        default: t5x
      BASE_IMAGE:
        type: string
        description: 'Base docker image that provides the foundation library'
        required: false
      BUILD_DATE:
        type: string
        description: 'Build date in YYYY-MM-DD format'
        required: false
        default: 'NOT SPECIFIED'
      BADGE_FILENAME:
        type: string
        description: 'Name of the endpoint JSON file for shields.io badge'
        required: false
        default: 'badge-rosetta-build'    
    outputs:
      DOCKER_TAG_MEALKIT:
        description: 'Tags of the mealkit image build'
        value: $ {{ jobs.build-rosetta.outputs.DOCKER_TAG_MEALKIT }}
      DOCKER_TAG_FINAL:
        description: "Tags of the complete image built"
        value: ${{ jobs.build-rosetta.outputs.DOCKER_TAG_FINAL }}

env:
  UPLD_IMAGE: ghcr.io/nvidia/jax-toolbox-internal
  DOCKER_REGISTRY: ghcr.io/nvidia

permissions:
  contents: read  # to fetch code
  actions:  write # to cancel previous workflows
  packages: write # to upload container

jobs:

  build-rosetta:
    runs-on: [self-hosted, "${{ inputs.ARCHITECTURE }}", small]
    env:
      BADGE_FILENAME_FULL: ${{ inputs.BADGE_FILENAME}}-${{ inputs.ARCHITECTURE}}.json
    outputs:
      DOCKER_TAG_MEALKIT: ${{ steps.mealkit-metadata.outputs.tags }}
      DOCKER_TAG_FINAL: ${{ steps.final-metadata.outputs.tags }}
    steps:
      - name: Print environment variables
        run: env

      - name: Set default BASE_IMAGE
        id: defaults
        run: |
          if [[ -n "${{ inputs.BASE_IMAGE }}" ]]; then
            echo "BASE_IMAGE=${{ inputs.BASE_IMAGE }}" >> "$GITHUB_OUTPUT"
          else
            echo "BASE_IMAGE=${{ env.DOCKER_REGISTRY }}/upstream-${{ inputs.BASE_LIBRARY }}:latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Check out the repository under ${GITHUB_WORKSPACE}
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.1
      
      - name: Set docker metadata - mealkit
        id: mealkit-metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.UPLD_IMAGE }}
          flavor: latest=false
          tags: type=raw,value=${{ github.run_id }}-${{ inputs.BASE_LIBRARY }}-${{ inputs.ARCHITECTURE }}-mealkit
          labels: org.opencontainers.image.created=${{ inputs.BUILD_DATE }}

      - name: Build docker images - mealkit
        id: mealkit-build
        uses: docker/build-push-action@v4
        with:
          context: rosetta/
          push: true
          file: rosetta/Dockerfile.${{ inputs.BASE_LIBRARY }}
          platforms: linux/${{ inputs.ARCHITECTURE }}
          tags: ${{ steps.mealkit-metadata.outputs.tags }}
          labels: ${{ steps.mealkit-metadata.outputs.labels }}
          target: mealkit
          build-args: |
            BASE_IMAGE=${{ steps.defaults.outputs.BASE_IMAGE }}

      - name: Set docker metadata - final
        id: final-metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.UPLD_IMAGE }}
          flavor: latest=false
          tags: type=raw,value=${{ github.run_id }}-${{ inputs.BASE_LIBRARY }}-${{ inputs.ARCHITECTURE }}-final
          labels: org.opencontainers.image.created=${{ inputs.BUILD_DATE }}

      - name: Build docker images - final
        uses: docker/build-push-action@v4
        with:
          context: rosetta/
          push: true
          file: rosetta/Dockerfile.${{ inputs.BASE_LIBRARY }}
          platforms: linux/${{ inputs.ARCHITECTURE }}
          tags: ${{ steps.final-metadata.outputs.tags }}
          labels: ${{ steps.final-metadata.outputs.labels }}
          target: final
          build-args: |
            BASE_IMAGE=${{ steps.defaults.outputs.BASE_IMAGE }}