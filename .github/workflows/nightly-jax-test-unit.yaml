name: Nightly JAX unit test

on:
  workflow_run:
    workflows: [Nightly JAX build]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      JAX_IMAGE:
        type: string
        description: 'JAX image built by NVIDIA/JAX-Toolbox'
        default: 'ghcr.io/nvidia/jax:latest'
        required: true
      PUBLISH:
        type: boolean
        description: Update status badge?
        default: false
        required: true

permissions:
  contents: read  # to fetch code
  actions:  write # to cancel previous workflows
  packages: write # to upload container

env:
  DEFAULT_JAX_IMAGE: 'ghcr.io/nvidia/jax:latest'
  BADGE_ENDPOINT: 'jax-unit-test-status.json'

jobs:

  metadata:
    runs-on: ubuntu-22.04
    outputs:
      JAX_IMAGE: ${{ steps.date.outputs.JAX_IMAGE }}
    steps:
      - name: Set metadata
        id: date
        shell: bash -x -e {0}
        run: |
          if [[ -z "${{ inputs.JAX_IMAGE }}" ]]; then
            JAX_IMAGE=${{ env.DEFAULT_JAX_IMAGE }}
          else
            JAX_IMAGE=${{ inputs.JAX_IMAGE }}
          fi
          echo "JAX_IMAGE=${JAX_IMAGE}" >> $GITHUB_OUTPUT

  run-jobs:
    needs: metadata
    uses: ./.github/workflows/_test_jax.yaml
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch'
    with:
      JAX_IMAGE: ${{ needs.metadata.outputs.JAX_IMAGE }}
    secrets: inherit

  publish:
    needs: [metadata, run-jobs]
    uses: ./.github/workflows/_publish_badge.yaml
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch'
    with:
      SCRIPT_PATH: '.github/workflows/scripts/jax_test_unit_badge.sh'
      BADGE_LABEL: 'V100 Unit'
      BADGE_FILENAME: 'jax-unit-test-status.json'
      ARTIFACTS: "${{ needs.run-jobs.outputs.UNIT_TEST_ARTIFACT_NAME }}/*"
      PUBLISH: ${{ inputs.PUBLISH }}
    secrets: inherit

  if-upstream-failed:
    runs-on: ubuntu-latest
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'failure') && github.event_name != 'workflow_dispatch'
    steps:
      - run: echo 'Upstream workflow failed, aborting run' && exit 1
