name: Nightly JAX build
run-name: Nightly JAX build (${{ github.event_name == 'workflow_run' && format('nightly {0}', github.event.workflow_run.created_at) || github.event_name }})

on:
  schedule:
    - cron: '30 9 * * *'  # Pacific Time 01:30 AM in UTC
  workflow_dispatch:
    inputs:
      PUBLISH:
        type: boolean
        description: Publish dated images and update the 'latest' tag?
        default: false
        required: false

permissions:
  contents: write # to fetch code, and create commits
  actions:  write # to cancel previous workflows
  packages: write # to upload container

jobs:

  metadata:
    runs-on: ubuntu-22.04
    outputs:
      BUILD_DATE: ${{ steps.date.outputs.BUILD_DATE }}
      PUBLISH: ${{ steps.if-publish.outputs.PUBLISH }}
    steps:
      - name: Set build date
        id: date
        shell: bash -x -e {0}
        run: |
          BUILD_DATE=$(TZ='US/Los_Angeles' date '+%Y-%m-%d')
          echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_OUTPUT

      - name: Determine whether results will be 'published'
        id: if-publish
        shell: bash -x -e {0}
        run: |
          echo "PUBLISH=${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.PUBLISH) }}" >> $GITHUB_OUTPUT

  # The trial-branch artifact will be passed to the following descendant workflows:
  #
  #  Nightly Jax Build -> Nightly Pax Build -> Nightly Pax Test -> Nightly Manifest Update
  #
  # Note: we do not pass the artifact along the T5x route, since it only needs
  #       to be present in one of the workflow_run.workflows[]
  bump-world-state:
    needs: metadata
    runs-on: ubuntu-22.04
    steps:
      - name: Check out the repository under ${GITHUB_WORKSPACE}
        uses: actions/checkout@v3
      - name: Update manifest and patches in-place
        working-directory: .github/container
        shell: bash -x -e {0}
        run: |
          bash bump.sh manifest.yaml
      - name: Commit trial branch
        shell: bash -x -e {0}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          # Prepend trial branch with "z" to make it appear at the end
          trial_branch=znightly-${{ github.run_id }}-${{ needs.metadata.outputs.BUILD_DATE }}
          git switch -c $trial_branch
          git status
          git add -u
          git add .github/container/patches/
          git status
          git commit -m "generated ${{github.run_id }}"
          git push --set-upstream origin $trial_branch

          echo "$trial_branch" > ./trial-branch.txt
      # This trial branch artifact will be propagated to all dependent workflows. 
      #  This works around the restriction that `workflow_run` triggered events cannot
      #  be passed inputs like in `workflow_dispatch` or `workflow_call`
      - name: 'Upload trial branch artifact'
        uses: actions/upload-artifact@v3
        with:
          name: trial-branch
          path: trial-branch.txt

  amd64:
    needs: metadata
    uses: ./.github/workflows/_build_jax.yaml
    with:
      ARCHITECTURE: amd64
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
    secrets: inherit

  arm64:
    needs: metadata
    uses: ./.github/workflows/_build_jax.yaml
    with:
      ARCHITECTURE: arm64
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
    secrets: inherit

  publish-mealkit:
    needs: [metadata, amd64, arm64]
    if: needs.metadata.outputs.PUBLISH == 'true'
    uses: ./.github/workflows/_publish_container.yaml
    with:
      SOURCE_IMAGE: |
        ${{ needs.amd64.outputs.DOCKER_TAG_MEALKIT }}
        ${{ needs.arm64.outputs.DOCKER_TAG_MEALKIT }}
      TARGET_IMAGE: jax
      TARGET_TAGS: |
        type=raw,value=mealkit,priority=500
        type=raw,value=mealkit-${{ needs.metadata.outputs.BUILD_DATE }},priority=500

  publish-final:
    needs: [metadata, amd64, arm64]
    if: needs.metadata.outputs.PUBLISH == 'true'
    uses: ./.github/workflows/_publish_container.yaml
    with:
      SOURCE_IMAGE: |
        ${{ needs.amd64.outputs.DOCKER_TAG_FINAL }}
        ${{ needs.arm64.outputs.DOCKER_TAG_FINAL }}
      TARGET_IMAGE: jax
      TARGET_TAGS: |
        type=raw,value=latest,priority=1000
        type=raw,value=nightly-${{ needs.metadata.outputs.BUILD_DATE }},priority=900

  finalize:
    if: always()
    needs: [metadata, amd64, arm64]
    uses: ./.github/workflows/_finalize.yaml
    with:
      PUBLISH_BADGE: ${{ needs.metadata.outputs.PUBLISH == 'true' }}
    secrets: inherit
